@using System.Text.Json
@model IEnumerable<Noted.Models.InfoMoney>;
@{
  ViewData["Title"] = "Rooms";
  Layout = "~/Views/Shared/_Layout.cshtml";
  var prices = Model.ToList();
  Console.WriteLine(prices);
}


<div class=" d-flex justify-content-center d-md-gap-0.5 pagebody flex-column-reverse flex-md-row mx-4">
  <!-- Bootstrap Carousel -->
  <div id="elegantCarouselRoom" class="carousel slide carousel-fade mt-5">
    <div class="carousel-inner g-0">
      <div class="carousel-item active" data-title="Single" data-long-desc=''
        data-desc="with flexible and good prices.">
        <img src="/images/img6.jpg" class="w-100 rounded imG" alt="Photo 1">
      </div>

      <div class="carousel-item p-0" data-title="Double" data-long-desc=''
        data-desc="with flexible and good prices.">
        <img src="/images/doubleRoom.jpg" class="w-100 rounded imG" alt="Photo 2">
      </div>

      <div class="carousel-item" data-title="Family Suite" data-long-desc=''
        data-desc="with flexible and good prices.">
        <img src="/images/rooms1.jpg" class="w-100 rounded imG" alt="Photo 3">
      </div>

      <div class="carousel-item" data-title="Duplex" data-long-desc='' data-desc="with flexible and good prices.">
        <img src="/images/rooms3.jpg" class="w-100 rounded imG" alt="Photo 4">
      </div>

      <!-- ...continue for others -->
    </div>

    <!-- Optional Controls -->
    <button class="carousel-control-prev" type="button" data-bs-target="#elegantCarouselRoom" data-bs-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#elegantCarouselRoom" data-bs-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
    </button>

    <!-- Optional Indicators -->
    <div class="carousel-indicators">
      <button type="button" data-bs-target="#elegantCarouselRoom" data-bs-slide-to="0" class="active"></button>
      <button type="button" data-bs-target="#elegantCarouselRoom" data-bs-slide-to="1"></button>
      <button type="button" data-bs-target="#elegantCarouselRoom" data-bs-slide-to="2"></button>
      <button type="button" data-bs-target="#elegantCarouselRoom" data-bs-slide-to="3"></button>
    </div>
  </div>
  <div id="carousel-info"
    class="mt-5 p-3 border rounded bg-light fs-1 d-flex flex-column justify-content-center align-items-center"
    style="max-width: 1000px;">
    <p id="room-title" class="titleFont text-center">Room Title</p>
    <p id="room-desc" class="descriptionFont text-center">Room description will appear here.</p>
    <div class="btn btn-white d-md-flex d-none">Hover for more details..</div>
    <div id="info-overlay" class="info-box visible d-md-invisible"></div>
  </div>
</div>
@* <div class="container mt-5">
  <h3 class=" mb-3">Room Booking</h3>

  <div class="container" role="group" aria-label="Date selection group" style="width: 100%;">
    <div class="row">
      <div class="col-2 border-end pe-3">
        <!-- Arrival Date Label and Dropdown -->
        <div class="mb-3">
          <label for="arrivalDate" class="form-label">Check-in</label>
          <div class="input-group">
            <span class="input-group-text"><i class="bi bi-calendar-date"></i></span>
            <input type="date" class="form-control" id="arrivalDate" placeholder="Select Arrival Date"
              min="@DateTime.Now.ToString("yyyy-MM-dd")">
          </div>
        </div>
        <!-- Departure Date Label and Dropdown -->
        <div class="mb-3">
          <label for="departureDate" class="form-label">Check-out</label>
          <div class="input-group">
            <span class="input-group-text"><i class="bi bi-calendar-date"></i></span>
            <input type="date" class="form-control" id="departureDate" placeholder="Select Departure Date">
          </div>
        </div>
      </div>
      <div class="col-2 border-end pe-3">
        <div class="mb-3">
          <label for="clientType" class="form-label">Client Type</label>
          <select class="form-select" id="clientType" aria-label="Client Type">
           
            <option value="1">Member</option>
            <option value="2">Navy Officer</option>
            <option value="3">Armed Forces Officer</option>
            <option value="4">Civilian</option>
            <option value="5">Foreigner</option>
          </select>
        </div>
      </div>
      <div class="col-2 border-end pe-3">
        <!-- Room Type Label and Dropdown -->
        <div class="mb-3">
          <label for="roomType" class="form-label">Room Type</label>
          <select class="form-select" id="roomType" aria-label="Room Type">
            
            <option value="1">Single Room</option>
            <option value="2">Double Room</option>
            <option value="3">Family Suite</option>
            <option value="4">Duplex</option>
          </select>
        </div>
      </div>
      <div class="col-2 border-end pe-3">
        <!-- hotel Type Label and Dropdown -->
        <div class="mb-3">
          <label for="hotel" class="form-label">Hotel</label>
          <select class="form-select" id="hotel" aria-label="Hotel">
           
            <option value="1">Main Hotel</option>
            <option value="2">Extension</option>
          </select>
        </div>
      </div>
      <div class="col-2 border-end pe-3">
        <div class="mb-3">
          <label for="additionalBeds" class="form-label">Additional Beds</label>
          <input type="number" id="additionalBeds" class="form-control" name="additionalBeds" placeholder="add beds"
            min="1" max="5">
        </div>
      </div>
      <div class="col-2">
        <div class="mb-3 mt-3"><br>
          <button type="button" class="btn btn-primary" id="calcBtn">Calculate</button> <br>
        </div>
      </div>
    </div>
    <div class="w-100 border border-2 border-warning text-center titleFont d-none" id="total"></div>




  </div>
</div> *@


@section Scripts {
  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const carousel = document.querySelector('#elegantCarouselRoom');
      const titleEl = document.getElementById('room-title');
      const descEl = document.getElementById('room-desc');


      function updateInfoBox() {
        const activeItem = carousel.querySelector('.carousel-item.active');
        const title = activeItem.getAttribute('data-title') || 'Room Title';
        const desc = activeItem.getAttribute('data-desc') || 'Description not available.';
        titleEl.textContent = title;
        descEl.textContent = desc;
        if (title === "Single") {
          document.getElementById('info-overlay').innerHTML = `<ul>
             <li>1 single bed</li>
             <li>Private bathroom</li>
             <li>Included breakfast</li>
             <li>Nile View</li>
             <li>Room Size 42m²</li>
           </ul>`;
        }
        else if (title === "Double") {
          document.getElementById('info-overlay').innerHTML = `<ul>
             <li>2 single beds or 1 large bed</li>
             <li>2 adults</li>
             <li>Private bathroom</li>
             <li>Included breakfast</li>
             <li>Nile View</li>
             <li>Room Size 42m²</li>
           </ul>`;
        }
        else if (title === "Family Suite") {
          document.getElementById('info-overlay').innerHTML = `<ul>
             <li>2 bedrooms with lounge</li>
             <li>4 single beds</li>
             <li>Private bathroom</li>
             <li>Included breakfast</li>
             <li>City View</li>
             <li>Room Size 65m²</li>
           </ul>`;
        }
        else if (title === "Duplex") {
          document.getElementById('info-overlay').innerHTML = `<ul>
             <li>1 bedroom with lounge</li>
             <li>1 large bed</li>
             <li>2 adults</li>
             <li>Private bathroom</li>
             <li>Included breakfast</li>
             <li>Nile View</li>
           </ul>`;
        }
      }

      // Set initial content
      updateInfoBox();

      // Update on slide
      carousel.addEventListener('slid.bs.carousel', updateInfoBox);
      const carouselElement = document.querySelector('#elegantCarouselRoom');
      const carouselInstance = new bootstrap.Carousel(carouselElement, {
        interval: 5000,
        ride: 'carousel',
        wrap: true
      });
      const infoBox = document.getElementById('info-overlay');
      const carouselInfo = document.getElementById('carousel-info');


      carouselInfo.addEventListener('mouseenter', function () {
        const carousel = document.querySelector('#elegantCarouselRoom');
        infoBox.classList.add('visible');
        carouselInstance.pause();

      });

      carouselInfo.addEventListener('mouseleave', function () {
        const carousel = document.querySelector('#elegantCarouselRoom');
        infoBox.classList.remove('visible');
        carouselInstance.cycle();
      });

    });

    @* document.getElementById('arrivalDate').addEventListener('change', function () {
      const arrivalDate = new Date(this.value);
      const departureInput = document.getElementById('departureDate');
      departureInput.min = this.value; // Set minimum to arrival date
      // If departure date is before arrival date, reset it
      if (new Date(departureInput.value) < arrivalDate) {
        departureInput.value = '';
      }
    });

    document.getElementById('roomType').addEventListener('change', function () {
      const roomType = this.value;
      if (roomType === "3") {
        document.getElementById("hotel").value = "1";
        document.getElementById("hotel").disabled = true;
      }
      else if(roomType === "4") {
        document.getElementById("hotel").value = "2";
        document.getElementById("hotel").disabled = true;
      }
      else {
        document.getElementById("hotel").disabled = false;
      }
    });

    document.getElementById('calcBtn').addEventListener('click', function () {
      const arrivalDate = new Date(document.getElementById('arrivalDate').value);
      const departureDate = new Date(document.getElementById('departureDate').value);
      const clientType = document.getElementById('clientType').value;
      const roomType = document.getElementById('roomType').value;
      const hotel = document.getElementById('hotel').value;
      const additionalBeds = parseInt(document.getElementById('additionalBeds').value) || 0;
      let roomPrice = 0;
      let list = @Html.Raw(JsonSerializer.Serialize(prices));
      if (clientType === "1") { // Member
        let info = list[0];
        if(hotel === "1") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "3") { // Family Suite
            roomPrice = info.FamilySuitePrice;
          }

        } else if(hotel === "2") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "4") { // duplex 
            roomPrice = info.DuplexPrice;
          }
        }
        // Additional bed cost
        let additionalBedCost = additionalBeds * info.AdditionalBedPrice;

        // Calculate number of nights
        const timeDiff = departureDate - arrivalDate;
        const nights = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

        if (isNaN(nights) || nights <= 0) {
          alert("Please select valid arrival and departure dates.");
          return;
        }

        // Total cost calculation
        const totalCost = (roomPrice + additionalBedCost) * nights;
        document.getElementById('total').innerText = `Total Cost: ${totalCost} EGP for ${nights} night(s).`;
        document.getElementById('total').classList.remove('d-none');
      }
      else if (clientType === "2") {
        let info = list[1];
        if(hotel === "1") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "3") { // Family Suite
            roomPrice = info.FamilySuitePrice;
          }

        } else if(hotel === "2") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "4") { // duplex 
            roomPrice = info.DuplexPrice;
          }
        }
        // Additional bed cost
        let additionalBedCost = additionalBeds * info.AdditionalBedPrice;

        // Calculate number of nights
        const timeDiff = departureDate - arrivalDate;
        const nights = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

        if (isNaN(nights) || nights <= 0) {
          alert("Please select valid arrival and departure dates.");
          return;
        }

        // Total cost calculation
        const totalCost = (roomPrice + additionalBedCost) * nights;
        document.getElementById('total').innerText = `Total Cost: ${totalCost} EGP for ${nights} night(s).`;
        document.getElementById('total').classList.remove('d-none');
      } 
      else if (clientType === "3") {
        let info = list[2];
        if(hotel === "1") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "3") { // Family Suite
            roomPrice = info.FamilySuitePrice;
          }

        } else if(hotel === "2") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "4") { // duplex 
            roomPrice = info.DuplexPrice;
          }
        }
        // Additional bed cost
        let additionalBedCost = additionalBeds * info.AdditionalBedPrice;

        // Calculate number of nights
        const timeDiff = departureDate - arrivalDate;
        const nights = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

        if (isNaN(nights) || nights <= 0) {
          alert("Please select valid arrival and departure dates.");
          return;
        }

        // Total cost calculation
        const totalCost = (roomPrice + additionalBedCost) * nights;
        document.getElementById('total').innerText = `Total Cost: ${totalCost} EGP for ${nights} night(s).`;
        document.getElementById('total').classList.remove('d-none');
      }
      else if (clientType === "4") {
        let info = list[3];
        if(hotel === "1") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "3") { // Family Suite
            roomPrice = info.FamilySuitePrice;
          }

        } else if(hotel === "2") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "4") { // duplex 
            roomPrice = info.DuplexPrice;
          }
        }
        // Additional bed cost
        let additionalBedCost = additionalBeds * info.AdditionalBedPrice;

        // Calculate number of nights
        const timeDiff = departureDate - arrivalDate;
        const nights = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

        if (isNaN(nights) || nights <= 0) {
          alert("Please select valid arrival and departure dates.");
          return;
        }

        // Total cost calculation
        const totalCost = (roomPrice + additionalBedCost) * nights;
        document.getElementById('total').innerText = `Total Cost: ${totalCost} EGP for ${nights} night(s).`;
        document.getElementById('total').classList.remove('d-none');
      }
      else if (clientType === "5") {
        let info = list[4];
        if(hotel === "1") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "3") { // Family Suite
            roomPrice = info.FamilySuitePrice;
          }

        } else if(hotel === "2") {
          if (roomType === "1") { // Single Room
            roomPrice = info.SingleRoomPriceFC1;
          } else if (roomType === "2") { // Double Room
            roomPrice = info.DoubleRoomPriceFC1;
          } else if (roomType === "4") { // duplex 
            roomPrice = info.DuplexPrice;
          }
        }
        // Additional bed cost
        let additionalBedCost = additionalBeds * info.AdditionalBedPrice;

        // Calculate number of nights
        const timeDiff = departureDate - arrivalDate;
        const nights = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));

        if (isNaN(nights) || nights <= 0) {
          alert("Please select valid arrival and departure dates.");
          return;
        }

        // Total cost calculation
        const totalCost = (roomPrice + additionalBedCost) * nights;
        document.getElementById('total').innerText = `Total Cost: ${totalCost} EGP for ${nights} night(s).`;
        document.getElementById('total').classList.remove('d-none');
      }
    }); *@


  </script>

}